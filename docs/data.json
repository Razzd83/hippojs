{
    "project": {
        "name": "hippojs",
        "description": "hippo.js is a wishful jQuery inspired DOM Library for use in modern browsers",
        "version": "0.1",
        "url": "http://hippojs.com",
        "logo": ""
    },
    "files": {
        "source/attribute.js": {
            "name": "source/attribute.js",
            "modules": {
                "attribute.js": 1
            },
            "classes": {},
            "fors": {
                "hippo()": 1
            },
            "namespaces": {}
        },
        "source/core-methods.js": {
            "name": "source/core-methods.js",
            "modules": {
                "core-methods.js": 1
            },
            "classes": {},
            "fors": {
                "hippo()": 1
            },
            "namespaces": {}
        },
        "source/core.js": {
            "name": "source/core.js",
            "modules": {
                "core.js": 1
            },
            "classes": {
                "hippo()": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "source/helpers.js": {
            "name": "source/helpers.js",
            "modules": {
                "helpers.js": 1
            },
            "classes": {
                "hippo.": 1
            },
            "fors": {
                "hippo.": 1
            },
            "namespaces": {}
        },
        "source/manipulation.js": {
            "name": "source/manipulation.js",
            "modules": {
                "manipulation.js": 1
            },
            "classes": {},
            "fors": {
                "hippo()": 1
            },
            "namespaces": {}
        }
    },
    "modules": {
        "attribute.js": {
            "name": "attribute.js",
            "submodules": {},
            "classes": {},
            "fors": {
                "hippo()": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "source/attribute.js",
            "line": 2,
            "description": "contains methods for operating on the element attributes"
        },
        "core-methods.js": {
            "name": "core-methods.js",
            "submodules": {},
            "classes": {},
            "fors": {
                "hippo()": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "source/core-methods.js",
            "line": 2,
            "description": "contains methods for operating on the wrapped set of elements in the hippo object"
        },
        "core.js": {
            "name": "core.js",
            "submodules": {},
            "classes": {
                "hippo()": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "source/core.js",
            "line": 13,
            "description": "setup hippo() function, constuctor, and prototype shortcut"
        },
        "helpers.js": {
            "name": "helpers.js",
            "submodules": {},
            "classes": {
                "hippo.": 1
            },
            "fors": {
                "hippo.": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "source/helpers.js",
            "line": 8,
            "description": "utilities for hippo.js"
        },
        "manipulation.js": {
            "name": "manipulation.js",
            "submodules": {},
            "classes": {},
            "fors": {
                "hippo()": 1
            },
            "namespaces": {},
            "tag": "module",
            "file": "source/manipulation.js",
            "line": 2,
            "description": "contains methods for operating on elements"
        }
    },
    "classes": {
        "hippo()": {
            "name": "hippo()",
            "shortname": "hippo()",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "core.js",
            "namespace": "",
            "file": "source/core.js",
            "line": 13,
            "description": "`hippo('li')` //Selector  \n`hippo('li','ul')` //Selector & Selector context  \n`hippo('li',document.body)` //Selector & Element Node context   \n`hippo('<div></div>')` //HTML  \n`hippo('<div></div>','window.frames[0].document')` //HTML & Document context  \n`hippo(document.body)` //Element Node  \n`hippo([document.body,document.head])` //Array  \n`hippo(document.body.children)` //NodeList  \n`hippo(document.all)` //HTMLCollection  \n`hippo(hippo())` //a hippo object itself",
            "is_constructor": 1,
            "params": [
                {
                    "name": "selector/HTML|Node|hippo()",
                    "description": "\n  A string selector, node, or hippo() object, if you leave it empty default to HTML element",
                    "type": "String|Node|Object"
                },
                {
                    "name": "selector|Node",
                    "description": "\n  A string containing a selector expression or node (i.e. element or document)",
                    "type": "String|Node"
                }
            ],
            "default": "HTML element",
            "return": {
                "description": "hippo() object e.g. `{0:ELEMENT_NODE,1:ELEMENT_NODE,length:2}`",
                "type": "Object"
            }
        },
        "hippo.": {
            "name": "hippo.",
            "shortname": "hippo.",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "helpers.js",
            "namespace": "",
            "file": "source/helpers.js",
            "line": 8,
            "description": "hippo. e.g. hippo.version",
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "source/attribute.js",
            "line": 8,
            "description": "sets attribute value for all elements in the set",
            "itemtype": "method",
            "name": "setAttr",
            "params": [
                {
                    "name": "attribute(s)",
                    "description": "",
                    "type": "String|Object"
                },
                {
                    "name": "value",
                    "description": "",
                    "type": "String"
                }
            ],
            "optional": 1,
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "attribute.js"
        },
        {
            "file": "source/attribute.js",
            "line": 33,
            "description": "gets attribute value, or array of attribute values from first element in the set",
            "itemtype": "method",
            "name": "addAttr",
            "params": [
                {
                    "name": "attribute",
                    "description": "",
                    "type": "String"
                }
            ],
            "optional": 1,
            "return": {
                "description": "either an array containing all attributes or a single value from a specific attribute passed in"
            },
            "class": "hippo()",
            "module": "attribute.js"
        },
        {
            "file": "source/attribute.js",
            "line": 50,
            "description": "remove attribute value from all elements in the set",
            "itemtype": "method",
            "name": "removeAttr",
            "params": [
                {
                    "name": "value",
                    "description": "\n  pass more than one value by providing a space inbetween values",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "attribute.js"
        },
        {
            "file": "source/attribute.js",
            "line": 70,
            "description": "does the first element in the set have the attribute value",
            "itemtype": "method",
            "name": "hasAttr",
            "params": [
                {
                    "name": "class",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "hippo()",
            "module": "attribute.js"
        },
        {
            "file": "source/attribute.js",
            "line": 82,
            "description": "Adds class attribute value",
            "itemtype": "method",
            "name": "addClass",
            "params": [
                {
                    "name": "class",
                    "description": "\n  pass more than one value by providing a space inbetween values",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "attribute.js"
        },
        {
            "file": "source/attribute.js",
            "line": 102,
            "description": "removes class attribute value",
            "itemtype": "method",
            "name": "removeClass",
            "params": [
                {
                    "name": "class",
                    "description": "\n  pass more than one value by providing a space inbetween values",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "attribute.js"
        },
        {
            "file": "source/attribute.js",
            "line": 122,
            "description": "toggle class attribute value",
            "itemtype": "method",
            "name": "toggleClass",
            "params": [
                {
                    "name": "class",
                    "description": "\n  pass more than one value by providing a space inbetween values",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "attribute.js"
        },
        {
            "file": "source/attribute.js",
            "line": 142,
            "description": "is class attribute value already defined",
            "itemtype": "method",
            "name": "hasClass",
            "params": [
                {
                    "name": "class",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "hippo()",
            "module": "attribute.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 12,
            "description": "Check if any of the elements in the set matches the CSS selector",
            "itemtype": "method",
            "name": "is",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 31,
            "description": "Check if any of the elements in the set has no children",
            "itemtype": "method",
            "name": "isEmpty",
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 49,
            "description": "get the index, in the set, of the element passed in",
            "itemtype": "method",
            "name": "index",
            "params": [
                {
                    "name": "selector|node",
                    "description": "",
                    "type": "String|Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 75,
            "description": "get the index of the selected element, among is siblings",
            "itemtype": "method",
            "name": "siblingsIndex",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 92,
            "description": "Check if any of the elements childrens, in the set, matches the CSS selector",
            "itemtype": "method",
            "name": "has",
            "params": [
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 111,
            "description": "total elements in the hippo object",
            "itemtype": "method",
            "name": "total",
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 122,
            "description": "convert hippo object of DOM elements into JavaScript array of elements",
            "itemtype": "method",
            "name": "toArray",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 133,
            "description": "get a DOM node from the hippo object at a specific index (zero based).",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "index",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 149,
            "description": "loop over each element",
            "itemtype": "method",
            "name": "each",
            "params": [
                {
                    "name": "callback",
                    "description": "",
                    "type": "Function"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 162,
            "description": "slice the set",
            "itemtype": "method",
            "name": "slice",
            "params": [
                {
                    "name": "number",
                    "description": "\n\tstart",
                    "type": "Number"
                },
                {
                    "name": "number",
                    "description": "\n\tend",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 178,
            "description": "reduce set to a single element",
            "itemtype": "method",
            "name": "eq",
            "params": [
                {
                    "name": "number",
                    "description": "",
                    "type": "Number"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 191,
            "description": "reduce set to the children elements of each element in the set",
            "itemtype": "method",
            "name": "children",
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 209,
            "description": "loop over each element, finding its descendants that match the passed in selector",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "Selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 231,
            "description": "filter elements by selector expression or callback function",
            "itemtype": "method",
            "name": "filter",
            "params": [
                {
                    "name": "selector|function",
                    "description": "",
                    "type": "String|Function"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 270,
            "description": "add element to set",
            "itemtype": "method",
            "name": "add",
            "params": [
                {
                    "name": "selector/HTML|Node|Hippo()",
                    "description": "\n  A string selector, node, or hippo() object, if you leave it empty default to HTML element",
                    "type": "String||Node||Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object with new element added",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 288,
            "description": "Get the last element of the current set",
            "itemtype": "method",
            "name": "last",
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 299,
            "description": "Get the first element of the current set",
            "itemtype": "method",
            "name": "first",
            "return": {
                "description": "",
                "type": "Node"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 311,
            "description": "clone element nodes in hippo object",
            "itemtype": "method",
            "name": "clone",
            "params": [
                {
                    "name": "callback",
                    "description": "\n  default is false, passing true does a deep clone, meaning not just the first selected element but all of its children too",
                    "type": "Boolean"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 325,
            "description": "clone element nodes in hippo object",
            "itemtype": "method",
            "name": "ancestors()",
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 349,
            "description": "clone element nodes in hippo object",
            "itemtype": "method",
            "name": "descendants()",
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 366,
            "description": "clone element nodes in hippo object",
            "itemtype": "method",
            "name": "parents()",
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 383,
            "description": "clone element nodes in hippo object",
            "itemtype": "method",
            "name": "nextSiblings()",
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 400,
            "description": "clone element nodes in hippo object",
            "itemtype": "method",
            "name": "prevSiblings()",
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/core-methods.js",
            "line": 417,
            "description": "clone element nodes in hippo object",
            "itemtype": "method",
            "name": "siblings()",
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "core-methods.js"
        },
        {
            "file": "source/helpers.js",
            "line": 15,
            "description": "Returns the version of hippo",
            "itemtype": "property",
            "name": "version",
            "static": 1,
            "type": "String",
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "hippo.",
            "module": "helpers.js"
        },
        {
            "file": "source/helpers.js",
            "line": 26,
            "description": "loop over an object or array",
            "itemtype": "method",
            "name": "each",
            "static": 1,
            "params": [
                {
                    "name": "Object|Array",
                    "description": "\n\tAn Array or Object to iterate over",
                    "type": "Object|Array"
                },
                {
                    "name": "callback",
                    "description": "\n\tA callback Function",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "returns the Object or Array passed in"
            },
            "class": "hippo.",
            "module": "helpers.js"
        },
        {
            "file": "source/helpers.js",
            "line": 60,
            "description": "return JavaScript datatype as string e.g. 'string'|'number'|'null'|'undefined'|'object'|'array'",
            "itemtype": "method",
            "name": "type",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "\n  Any JavaScript value",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "'string'|'number'|'null'|'undefined'|'object'|'array'"
            },
            "class": "hippo.",
            "module": "helpers.js"
        },
        {
            "file": "source/helpers.js",
            "line": 81,
            "description": "return true if the array passed in is constructed from the Array() Constructor",
            "itemtype": "method",
            "name": "isArray",
            "static": 1,
            "params": [
                {
                    "name": "value",
                    "description": "\n  Any JavaScript value",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "hippo.",
            "module": "helpers.js"
        },
        {
            "file": "source/helpers.js",
            "line": 95,
            "description": "return true if the array passed in is constructed from the Array() Constructor",
            "itemtype": "method",
            "name": "isFunction",
            "static": 1,
            "params": [
                {
                    "name": "JavasScript",
                    "description": "value"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "hippo.",
            "module": "helpers.js"
        },
        {
            "file": "source/helpers.js",
            "line": 108,
            "description": "return true if the array passed in is constructed from the Array() Constructor",
            "itemtype": "method",
            "name": "matchesSelector",
            "static": 1,
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "selector",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "hippo.",
            "module": "helpers.js"
        },
        {
            "file": "source/helpers.js",
            "line": 123,
            "description": "return true if the array passed in is constructed from the Array() Constructor",
            "itemtype": "method",
            "name": "collectElements",
            "static": 1,
            "params": [
                {
                    "name": "element",
                    "description": "",
                    "type": "Node"
                },
                {
                    "name": "property",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "hippo.",
            "module": "helpers.js"
        },
        {
            "file": "source/helpers.js",
            "line": 143,
            "description": "return true if the array passed in is constructed from the Array() Constructor",
            "itemtype": "method",
            "name": "uniqElements",
            "static": 1,
            "params": [
                {
                    "name": "array",
                    "description": "}",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "hippo.",
            "module": "helpers.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 8,
            "description": "replace the elements in the set with an html string, selected node from the DOM, a node, or each element in a hippo set",
            "itemtype": "method",
            "name": "replaceWith",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "html string, text string, Node, or Selector, or Hippo Object",
                    "type": "String|Node|Selector|Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "\n   hippo() object containing orignal elements removed",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 36,
            "description": "remove DOM contents of each element in the set",
            "itemtype": "method",
            "name": "empty",
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 50,
            "description": "remove each element in the set",
            "itemtype": "method",
            "name": "remove",
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 66,
            "description": "Add content to the DOM before each element in the set",
            "itemtype": "method",
            "name": "before",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "html string, Node, or Selector, or Hippo Object",
                    "type": "String|Node|Selector|Object"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 93,
            "description": "Add content to the DOM before the element selected by the selector expression",
            "itemtype": "method",
            "name": "insertBefore",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "html string, Node, or Selector",
                    "type": "String|Node|Selector"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 114,
            "description": "Add content to the DOM after each element in the set",
            "itemtype": "method",
            "name": "after",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "html string, Node, or Selector",
                    "type": "String|Node|Selector"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 141,
            "description": "Add content to the DOM after the element selected by the selector expression",
            "itemtype": "method",
            "name": "insertAfter",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "html string, Node, or Selector",
                    "type": "String|Node|Selector"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 162,
            "description": "Append content to the DOM inside each individual element in the set",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "html string/text string or Element Node",
                    "type": "String|Node"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 187,
            "description": "Append content to the DOM inside the selector",
            "itemtype": "method",
            "name": "appendTo",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "selector",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 203,
            "description": "prepend content to the DOM inside each individual element in the set",
            "itemtype": "method",
            "name": "prepend",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "html string/text string or Element Node",
                    "type": "String|Node"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 228,
            "description": "prepend content to the DOM inside the selector",
            "itemtype": "method",
            "name": "prependTo",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "selector",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 244,
            "description": "Wrap each element of the set separately in a DOM structure",
            "itemtype": "method",
            "name": "wrap",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "html string",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 260,
            "description": "Wrap each element of the set separately in a DOM structure",
            "itemtype": "method",
            "name": "wrapInner",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "html string",
                    "type": "String"
                }
            ],
            "chainable": 1,
            "return": {
                "description": "hippo() object",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 277,
            "description": "Set HTML contents of elements in the set, or get innerHTML of first element",
            "itemtype": "method",
            "name": "html",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "selector",
                    "type": "String"
                }
            ],
            "optional": 1,
            "chainable": 1,
            "return": {
                "description": "hippo() object or innerHTML",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 298,
            "description": "Set HTML contents including parent element",
            "itemtype": "method",
            "name": "outerHtml",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "selector",
                    "type": "String"
                }
            ],
            "optional": 1,
            "chainable": 1,
            "return": {
                "description": "hippo() object or innerHTML",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        },
        {
            "file": "source/manipulation.js",
            "line": 320,
            "description": "Set text contents of elements in the set, or get textContent of first element",
            "itemtype": "method",
            "name": "text",
            "params": [
                {
                    "name": "!~YUIDOC_LINE~!",
                    "description": "selector",
                    "type": "String"
                }
            ],
            "optional": 1,
            "chainable": 1,
            "return": {
                "description": "hippo() object or textContent",
                "type": "Object"
            },
            "class": "hippo()",
            "module": "manipulation.js"
        }
    ]
}